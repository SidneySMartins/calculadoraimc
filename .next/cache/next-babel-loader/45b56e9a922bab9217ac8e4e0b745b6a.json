{"ast":null,"code":"var _jsxFileName = \"E:\\\\React JS\\\\SejaDEV\\\\Aula1\\\\imc\\\\components\\\\Calculator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport { useState } from 'react';\nimport styles from \"./Calculator.module.scss\";\n\nfunction Calculator() {\n  _s();\n\n  var _useState = useState(0),\n      altura = _useState[0],\n      setAltura = _useState[1];\n\n  var _useState2 = useState(0),\n      peso = _useState2[0],\n      setPeso = _useState2[1];\n\n  var _useState3 = useState(0),\n      imc = _useState3[0],\n      setImc = _useState3[1];\n\n  var calculateImc = function calculateImc() {\n    var alturaM = altura / 100;\n    setImc((peso / (alturaM * alturaM)).toFixed(2));\n  };\n\n  function verifyImc() {\n    if (imc < 18.5) {\n      return \"Abaixo do Peso\";\n    } else if (imc < 24.9) {\n      return \"Peso Normal\";\n    } else if (imc < 29.9) {\n      return \"Sobrepeso Normal\";\n    } else if (imc < 34.9) {\n      return \"Obesidade Grau 1\";\n    } else if (imc < 39.9) {\n      return \"Obesidade Grau 2\";\n    } else {\n      return \"Obesidade Grau 1\";\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: styles.calculator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Calculadora\"), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(TextField, {\n    label: \"Altura em cm\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: altura,\n    onChange: function onChange(_ref) {\n      var target = _ref.target;\n      return setAltura(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Peso em Kg\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: peso,\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return setPeso(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: function onClick() {\n      return calculateImc();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Calcular\")), imc && __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"O seu IMC \\xE9: \", imc, \" kg/mc = \", verifyImc())))));\n}\n\n_s(Calculator, \"UrG2uJtkxgIzLEKZ0gMS6U51lD0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["E:/React JS/SejaDEV/Aula1/imc/components/Calculator/index.js"],"names":["Container","Grid","Typography","TextField","Button","useState","styles","Calculator","altura","setAltura","peso","setPeso","imc","setImc","calculateImc","alturaM","toFixed","verifyImc","calculator","target","value"],"mappings":"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","sourcesContent":["import { Container, Grid, Typography, TextField, Button, } from \"@material-ui/core\";\r\nimport { useState } from 'react'\r\n\r\nimport styles from \"./Calculator.module.scss\";\r\n\r\nfunction Calculator() {\r\n  const [altura, setAltura] = useState(0)\r\n  const [peso, setPeso] = useState(0)\r\n  const [imc, setImc] = useState(0)\r\n\r\n  const calculateImc =() =>{\r\n    const alturaM = altura /100\r\n    setImc((peso/(alturaM*alturaM)).toFixed(2))\r\n  }\r\n\r\n  function verifyImc(){\r\n    if(imc <18.5){\r\n      return \"Abaixo do Peso\"\r\n    }else if( imc < 24.9){\r\n      return \"Peso Normal\"\r\n    }else if( imc < 29.9){\r\n      return \"Sobrepeso Normal\"\r\n    }else if( imc < 34.9){\r\n      return \"Obesidade Grau 1\"\r\n    }else if( imc < 39.9){\r\n      return \"Obesidade Grau 2\"\r\n    } else{\r\n      return \"Obesidade Grau 1\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.calculator}>\r\n      <Container maxWidth=\"xs\">\r\n        <Typography variant=\"h3\">Calculadora</Typography>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item> { /* primeira forma de usar o evento) */ }\r\n            <TextField label=\"Altura em cm\" variant=\"filled\" fullWidth type=\"number\" value={altura} onChange={({target}) => setAltura(target.value)}/>\r\n          </Grid>\r\n          <Grid item>{ /* segunda forma de usar o evento) */ }\r\n            <TextField label=\"Peso em Kg\" variant=\"filled\" fullWidth type=\"number\" value={peso} onChange={({target}) => setPeso(target.value)}/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => calculateImc()}>Calcular</Button>\r\n          </Grid>\r\n          {\r\n            imc && \r\n            <Grid item>\r\n            <Typography>O seu IMC Ã©: {imc} kg/mc = {verifyImc()}</Typography>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}