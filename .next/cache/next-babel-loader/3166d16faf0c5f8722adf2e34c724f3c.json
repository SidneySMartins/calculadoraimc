{"ast":null,"code":"var _jsxFileName = \"E:\\\\React JS\\\\SejaDEV\\\\Aula1\\\\imc\\\\components\\\\Calculator\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport { useState } from 'react';\nimport styles from \"./Calculator.module.scss\";\n\nfunction Calculator() {\n  const {\n    0: altura,\n    1: setAltura\n  } = useState(0);\n  const {\n    0: peso,\n    1: setPeso\n  } = useState(0);\n  const {\n    0: imc,\n    1: setImc\n  } = useState();\n\n  const calculateImc = () => {\n    const alturaM = altura / 100;\n    setImc(peso / (alturaM * alturaM));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.calculator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Calculadora\"), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(TextField, {\n    label: \"Altura em cm\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: altura,\n    onChange: target => {\n      setAltura(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    label: \"Peso em Kg\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: peso,\n    onChange: target => {\n      setPeso(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => calculateImc(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Calcular\")), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"O seu IMC \\xE9: \", imc)))));\n}\n\nexport default Calculator;","map":{"version":3,"sources":["E:/React JS/SejaDEV/Aula1/imc/components/Calculator/index.js"],"names":["Container","Grid","Typography","TextField","Button","useState","styles","Calculator","altura","setAltura","peso","setPeso","imc","setImc","calculateImc","alturaM","calculator","target","value"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAAgE,mBAAhE;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM;AAAA,OAACO,GAAD;AAAA,OAAMC;AAAN,MAAgBR,QAAQ,EAA9B;;AAEA,QAAMS,YAAY,GAAE,MAAK;AACvB,UAAMC,OAAO,GAAGP,MAAM,GAAE,GAAxB;AACAK,IAAAA,MAAM,CAACH,IAAI,IAAEK,OAAO,GAACA,OAAV,CAAL,CAAN;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,cAAjB;AAAgC,IAAA,OAAO,EAAC,QAAxC;AAAiD,IAAA,SAAS,MAA1D;AAA2D,IAAA,IAAI,EAAC,QAAhE;AAAyE,IAAA,KAAK,EAAER,MAAhF;AAAwF,IAAA,QAAQ,EAAGS,MAAD,IAAY;AAACR,MAAAA,SAAS,CAACQ,MAAM,CAACC,KAAR,CAAT;AAAwB,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,QAAtC;AAA+C,IAAA,SAAS,MAAxD;AAAyD,IAAA,IAAI,EAAC,QAA9D;AAAuE,IAAA,KAAK,EAAER,IAA9E;AAAoF,IAAA,QAAQ,EAAGO,MAAD,IAAY;AAACN,MAAAA,OAAO,CAACM,MAAM,CAACC,KAAR,CAAP;AAAsB,KAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,MAArD;AAAsD,IAAA,OAAO,EAAE,MAAMJ,YAAY,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAPF,EAUE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA0BF,GAA1B,CADF,CAVF,CAFF,CADF,CADF;AAqBD;;AAED,eAAeL,UAAf","sourcesContent":["import { Container, Grid, Typography, TextField, Button, } from \"@material-ui/core\";\r\nimport { useState } from 'react'\r\n\r\nimport styles from \"./Calculator.module.scss\";\r\n\r\nfunction Calculator() {\r\n  const [altura, setAltura] = useState(0)\r\n  const [peso, setPeso] = useState(0)\r\n  const [imc, setImc] = useState()\r\n\r\n  const calculateImc =() =>{\r\n    const alturaM = altura /100\r\n    setImc(peso/(alturaM*alturaM))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.calculator}>\r\n      <Container maxWidth=\"xs\">\r\n        <Typography variant=\"h3\">Calculadora</Typography>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item> { /* primeira forma de usar o evento) */ }\r\n            <TextField label=\"Altura em cm\" variant=\"filled\" fullWidth type=\"number\" value={altura} onChange={(target) => {setAltura(target.value)}}/>\r\n          </Grid>\r\n          <Grid item>{ /* segunda forma de usar o evento) */ }\r\n            <TextField label=\"Peso em Kg\" variant=\"filled\" fullWidth type=\"number\" value={peso} onChange={(target) => {setPeso(target.value)}}/>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => calculateImc()}>Calcular</Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>O seu IMC Ã©: {imc}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}